<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="arrow.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAYMAAABvCAYAAAAOlaxfAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DQAACw0B7QfALAAAA/BJREFUeF7t2s1tlEkUhlFCIARCmBAIYUKYUAiFAIhgImDpACYAFqzZjTxVgkKi
        5zbdffv7qZ/zSKcWV7Yle/NKtt+8vr4CbOVj8e7ixgDCI0BS61NhFAYSHgGSLjMKgwiPAEnXMgqdC48A
        SbcyCp0KjwBJ92YUOhMeAZIezSh0IjwCJGX7u3hfRF+TA4RHgKRn+1wYhROER4CkrTIKBwuPAElbZxQO
        Eh4BkvbKKOwsPAIk7Z1R2El4BEg6KqOwsfAIkHR0RmEj4REg6ayMwpPCI0DS2RmFpPAIkNRLRuFB4REg
        qbeMwp3CI0BSr70URuE3wiNAUu8ZhSvCI0DSKBmFC+ERIGm0jMIP4REgadSWH4XwCJA0esuOQngESJql
        5UYhPAIkzdYyoxAeAZJmbfpRCI8ASbM37SiER4CkVZpuFMIjQNJqTTMK4REgadWGH4XwCJC0ev8UfxXR
        z6Zr4REgSd/7Ugw1CuERIEm/NswohEeAJMV1Pwr1kSQdU7ejUB9J0rF1Nwr1kSSdUzejUB9J0rmdPgr1
        kST10WmjUB9JUl8dPgr1kST12WGjUB9JUt/tPgr1kSSN0ddil1GojyRprDYfhfpIksZss1GojyRp7J4e
        hfpIkuYoPQr1kSTN1cOjUB9J0pzdPQr1kSTN3c1RqI8kaY2ujoIxkKT1+t8oGANJWrefo2AMJEkvxkCS
        1uzf4lvxoXhrDCRpreoItF8PvS38zUCSFst/E0nSwl0dgaY+kqQ5uzkCTX0kSXN19wg09ZEkzdHDI9DU
        R5I0dukRaOojSRqzp0egqY8kaaw2G4GmPpKkMdp8BJr6SJL6brcRaOojSeqz3UegqY8kqa8OG4GmPpKk
        PvpSHDoCTX0kSed22gg09ZEkndPpI9DUR5J0bN2MQBMeAZL0+7obgSY8AiQprtsRaMIjQJJ+rfsRaMIj
        QJK+N8wINOERIGn1hhuBJjwCJK3asCPQhEeApNUafgSa8AiQtErTjEATHgGSZu+l+LOIvvehhUeApFmr
        I/C+iL7nKYRHgKTZmn4EmvAIkDRLy4xAEx4BkkZvuRFowiNA0qgtOwJNeARIGq3lR6AJjwBJo2QELoRH
        gKTeMwJXhEeApF4zAjeER4Ck3jICdwqPAEm9ZAQeFB4Bks7OCCSFR4Cks/pcGIEnhEeApKMzAhsJjwBJ
        R2UENhYeAZL2zgjsJDwCJO2VEdhZeARI2jojcJDwCJC0VUbgYOERIOnZjMBJwiNAUjYjcLLwCJD0aEag
        E+ERIOnejEBnwiNA0q2MQKfCI0DStT4VfxTR59CB8AiQdFkdgXdF9LF0JDwCJLWMwGDCI0DSx8IIDOf1
        zX8BzWd+VCo1LwAAAABJRU5ErkJggg==
</value>
  </data>
</root>